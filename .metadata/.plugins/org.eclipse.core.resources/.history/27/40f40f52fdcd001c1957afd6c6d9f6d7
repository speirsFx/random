package Array;

import java.util.List;

public class CombinationSum2 {

	public static List<List<Integer> > CombinationSum21(int[] nums, int target){
		List<List<Integer> > result = new ArrayList();
		List<Integer> list = new ArrayList();
		
		backtracking(int nums[], target, 0, list, result);
		
		
	}
	
	
	public static void backtracking(int[] nums, int target, int start, List<Integer> list,List<List<Integer>> result ) {
		
		if(target == 0) {
			result.add(list);
			return;
		}
		
		
		
		for(int i = start; i < nums.length; i++) {
			if(i > 0 && nums[i] == num[i-1])
				continue;
			if(nums[i] < 0)
				break;
			
			list.add(nums[i]);
			backtracking(nums, target - nums[i], i+1, list, result);
			list.remove(list.size()-1);
			
		}
		
	}
	
}

